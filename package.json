{
  "name": "parser-combinator",
  "version": "1.0.0",
  "description": "Not a pure parser combinator, as it requires a lexing step for performance reasons. But it does allow you to define a language by combining parsers.",
  "main": "index.js",
  "bin": {
    "pasukon": "bin/cli.js"
  },
  "directories": {
    "lib": "lib",
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "benchmark": "^2.1.4",
    "chai": "^4.2.0",
    "chai-string": "^1.5.0",
    "eslint": "^7.7.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-mocha": "^8.0.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "grunt": "^1.3.0",
    "grunt-browserify": "^5.3.0",
    "grunt-terser": "^1.0.0",
    "mocha": "^8.1.2",
    "pegjs": "^0.10.0"
  },
  "scripts": {
    "test": "mocha test/**/*-test.js",
    "watch": "mocha --watch test/**/*-test.js",
    "grammar-pegjs": "pegjs -o lib/pegjs/grammar.js lib/pegjs/grammar.pegjs",
    "grammar": "node lib/tasks/build-ast lib/grammar.pasukon",
    "benchmark": "node test/benchmarks/suite.js",
    "build": "grunt"
  },
  "author": "Federico Ramirez",
  "license": "MIT"
}
